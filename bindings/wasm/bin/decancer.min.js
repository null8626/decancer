let wasm,output;const cachedTextDecoder="undefined"!=typeof TextDecoder?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};"undefined"!=typeof TextDecoder&&cachedTextDecoder.decode();let cachedUint8Memory0=null;function getUint8Memory0(){return null!==cachedUint8Memory0&&0!==cachedUint8Memory0.byteLength||(cachedUint8Memory0=new Uint8Array(wasm.memory.buffer)),cachedUint8Memory0}function getStringFromWasm0(e,t){return e>>>=0,cachedTextDecoder.decode(getUint8Memory0().subarray(e,e+t))}const heap=new Array(128).fill(void 0);heap.push(void 0,null,!0,!1);let heap_next=heap.length;function addHeapObject(e){heap_next===heap.length&&heap.push(heap.length+1);const t=heap_next;return heap_next=heap[t],heap[t]=e,t}let WASM_VECTOR_LEN=0;const cachedTextEncoder="undefined"!=typeof TextEncoder?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},encodeString="function"==typeof cachedTextEncoder.encodeInto?function(e,t){return cachedTextEncoder.encodeInto(e,t)}:function(e,t){const n=cachedTextEncoder.encode(e);return t.set(n),{read:e.length,written:n.length}};function passStringToWasm0(e,t,n){if(void 0===n){const n=cachedTextEncoder.encode(e),r=t(n.length,1)>>>0;return getUint8Memory0().subarray(r,r+n.length).set(n),WASM_VECTOR_LEN=n.length,r}let r=e.length,a=t(r,1)>>>0;const o=getUint8Memory0();let c=0;for(;c<r;c++){const t=e.charCodeAt(c);if(t>127)break;o[a+c]=t}if(c!==r){0!==c&&(e=e.slice(c)),a=n(a,r,r=c+3*e.length,1)>>>0;const t=getUint8Memory0().subarray(a+c,a+r);c+=encodeString(e,t).written}return WASM_VECTOR_LEN=c,a}let cachedInt32Memory0=null;function getInt32Memory0(){return null!==cachedInt32Memory0&&0!==cachedInt32Memory0.byteLength||(cachedInt32Memory0=new Int32Array(wasm.memory.buffer)),cachedInt32Memory0}function dropObject(e){e<132||(heap[e]=heap_next,heap_next=e)}function takeObject(e){const t=heap[e];return dropObject(e),t}const OPTIONS={k:["retainCapitalization","disableBidi","retainDiacritics","retainGreek","retainCyrillic","retainHebrew","retainArabic","retainDevanagari","retainBengali","retainArmenian","retainGujarati","retainTamil","retainThai","retainLao","retainBurmese","retainKhmer","retainMongolian","retainChinese","retainJapanese","retainKorean","retainBraille","retainEmojis"],o:{pureHomoglyph:2097148}};function options(e){e||(e={});let t=0;for(let n=0;n<OPTIONS.k.length;n++)e[OPTIONS.k[n]]&&(t|=1<<n);for(const[n,r]of Object.entries(OPTIONS.o))e[n]&&(t=r);return t}function cure(e,t){try{const a=wasm.__wbindgen_add_to_stack_pointer(-16),i=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),o=WASM_VECTOR_LEN;wasm.cure(a,i,o,"number"==typeof options?t:options(t));var n=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1];if(getInt32Memory0()[a/4+2])throw takeObject(r);return CuredString.__wrap(n)}finally{wasm.__wbindgen_add_to_stack_pointer(16)}}function format(e){let t,n;try{const i=wasm.__wbindgen_add_to_stack_pointer(-16),o=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),s=WASM_VECTOR_LEN;wasm.format(i,o,s);var r=getInt32Memory0()[i/4+0],a=getInt32Memory0()[i/4+1];return t=r,n=a,getStringFromWasm0(r,a)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(t,n,1)}}export class CuredString{static __wrap(e){e>>>=0;const t=Object.create(CuredString.prototype);return t.__wbg_ptr=e,t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,e}free(){const e=this.__destroy_into_raw();wasm.__wbg_curedstring_free(e)}startsWith(e){const t=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN;return 0!==wasm.curedstring_startsWith(this.__wbg_ptr,t,n)}endsWith(e){const t=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN;return 0!==wasm.curedstring_endsWith(this.__wbg_ptr,t,n)}contains(e){const t=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN;return 0!==wasm.curedstring_contains(this.__wbg_ptr,t,n)}equals(e){const t=passStringToWasm0(e,wasm.__wbindgen_malloc,wasm.__wbindgen_realloc),n=WASM_VECTOR_LEN;return 0!==wasm.curedstring_equals(this.__wbg_ptr,t,n)}toString(){let e,t;try{const a=wasm.__wbindgen_add_to_stack_pointer(-16);wasm.curedstring_toString(a,this.__wbg_ptr);var n=getInt32Memory0()[a/4+0],r=getInt32Memory0()[a/4+1];return e=n,t=r,getStringFromWasm0(n,r)}finally{wasm.__wbindgen_add_to_stack_pointer(16),wasm.__wbindgen_free(e,t,1)}}}async function __wbg_load(e,t){if("function"==typeof Response&&e instanceof Response){if("function"==typeof WebAssembly.instantiateStreaming)try{return await WebAssembly.instantiateStreaming(e,t)}catch(t){if("application/wasm"==e.headers.get("Content-Type"))throw t;console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",t)}const n=await e.arrayBuffer();return await WebAssembly.instantiate(n,t)}{const n=await WebAssembly.instantiate(e,t);return n instanceof WebAssembly.Instance?{instance:n,module:e}:n}}function __wbg_get_imports(){return{wbg:{__wbindgen_error_new:function(e,t){return addHeapObject(new Error(getStringFromWasm0(e,t)))},__wbindgen_throw:function(e,t){throw new Error(getStringFromWasm0(e,t))}}}}function __wbg_finalize_init(e,t){return wasm=e.exports,cachedInt32Memory0=null,cachedUint8Memory0=null,output=Object.assign(cure,{format,options}),output}export default async function init({local:e}){if(void 0!==wasm)return output;const t=__wbg_get_imports(),n=fetch(e?new URL("decancer.wasm",import.meta.url):"https://cdn.jsdelivr.net/gh/null8626/decancer@v3.0.0/bindings/wasm/bin/decancer.wasm"),{instance:r,module:a}=await __wbg_load(await n,t);return __wbg_finalize_init(r,a)}